x<-4L
class(x)
x<-c(4,TRUE)
class(x)
x
x <- c(1,3, 5)
y <- c(3, 2, 10)
x
rbind(x,y)
b<-rbind(x,y)
class(b)
x <- list(2, "a", "b", TRUE)
x[[2]]
class(x[[2]])
z<-x[[2]]
class(z)
typ(z)
type(z)
size(z)
length(z)
x <- 1:4
y<-2
x+y
x <- c(17, 14, 4, 5, 13, 12, 10)
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x > 10] <- 4
x
q
read.table()
read.table("~/coursera//RProgramming/hw1_data.csv")
read.table("~/coursera//RProgramming/hw1_data.csv",TRUE,",")
split(mtcars$mpg, mtcars$cyl), mean)
library(datasets)
data(mtcars)
split(mtcars$mpg, mtcars$cyl), mean)
library(datasets)
data(mtcars)
split(mtcars$mpg, mtcars$cyl), mean)
split(mtcars$mpg, mtcars$cyl)
split(mtcars$mpg, mtcars$cyl)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
split(mtcars$mpg, mtcars$cyl)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
split(mtcars$mpg)
mtcars$mpg
mtcars$cyl
sapply(split(mtcars$mpg, mtcars$cyl), mean)
split(mtcars$hp, mtcars$cyl)
sapply(split(mtcars$hp, mtcars$cyl),mean)
sapply(split(mtcars$hp, mtcars$cyl),mean)
sapply(split(mtcars$hp, mtcars$cyl),mean)[[2,1]]
sapply(split(mtcars$hp, mtcars$cyl),mean)[2,1]
sapply(split(mtcars$hp, mtcars$cyl),mean)
dim(sapply(split(mtcars$hp, mtcars$cyl),mean))
res<-sapply(split(mtcars$hp, mtcars$cyl),mean)
dim(res)
nrow(res)
class(res)
length(res)
res[[1]]
res[[3]]-res[[1]]
debug(ls)
ls()
{
q()
d
g
g
q
q
q
q()
q()
ls
exit
k
sd
d
end
exit
break
return
q
q()
exit()
system.time(rnorm(1000,10))
system.time(rnorm(10000,10))
system.time(rnorm(100000,10))
system.time(rnorm(1000000,10))
system.time(rnorm(10000000,10))
?inverse cumulative distribution
swirl()
library(swirl)
swirl()
ls()
class(plants)
q()
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
str(nlme)
nlme
?nlme
Diet
weight
Time
?Diet
??Diet
??Diet
?nlme
hist
?hist
setwd(~)
setwd(~/)
getwd()
rnorm
?rnorm
rnorm(10)
rnorm(10000);
dat<-rnorm(10000);
hist(dat)
hist(dat, breaks=2)
hist(dat, breaks=20)
hist(dat, breaks=30)
hist(dat, breaks=50)
hist(dat, breaks=60)
hist(dat, breaks=70)
hist(dat, breaks=90)
dat<-rnorm(1000);
hist(dat, breaks=50)
hist(dat, breaks=60)
dat<-rnorm(4000);
hist(dat, breaks=60)
title(position)
hist(dat, breaks=60,title='position')
x<-rnorm(1000);
x<-rnorm(1000);
hist(x, breaks=60)
library(MASS)
tbl<-table(survey$Smoke,survey$Exer)
tbl
chisq.tst(tbl)
chisq.test(tbl)
ctbl<-cbind(tbl[,"Freq"],tbl[,"None"]+tbl[,"Some"]
)
chisq.test(ctbl)
dnorm(100,10,94)
?dnorm
dnorm(94,mean=100,sd=10)
dnorm(93,mean=100,sd=10)
dnorm(93,mean=100,sd=10)
pnorm(93,mean=100,sd=10)
qnorm(95,mean=100,sd=10)
qnorm(0.95,mean=100,sd=10)
round(qnorm(0.95,mean=100,sd=10))
round(qnorm(0.95,mean=100,sd=10),3)
round(qnorm(0.95,mean=100,sd=10/50**0.5),3)
library(manipulate)
myHist <- function(mu){
g <- ggplot(galton, aes(x = child))
g <- g + geom_histogram(fill = "salmon",
binwidth=1, aes(y = ..density..), colour = "black")
g <- g + geom_density(size = 2)
g <- g + geom_vline(xintercept = mu, size = 2)
mse <- round(mean((galton$child - mu)^2), 3)
g <- g + labs(title = paste('mu = ', mu, ' MSE = ', mse))
g
}
manipulate(myHist(mu), mu = slider(62, 74, step = 0.5))
install.packages("ggplot2")
library(manipulate)
myHist <- function(mu){
g <- ggplot(galton, aes(x = child))
g <- g + geom_histogram(fill = "salmon",
binwidth=1, aes(y = ..density..), colour = "black")
g <- g + geom_density(size = 2)
g <- g + geom_vline(xintercept = mu, size = 2)
mse <- round(mean((galton$child - mu)^2), 3)
g <- g + labs(title = paste('mu = ', mu, ' MSE = ', mse))
g
}
manipulate(myHist(mu), mu = slider(62, 74, step = 0.5))
install.packages("ggplot")
library(manipulate)
myHist <- function(mu){
g <- ggplot2(galton, aes(x = child))
g <- g + geom_histogram(fill = "salmon",
binwidth=1, aes(y = ..density..), colour = "black")
g <- g + geom_density(size = 2)
g <- g + geom_vline(xintercept = mu, size = 2)
mse <- round(mean((galton$child - mu)^2), 3)
g <- g + labs(title = paste('mu = ', mu, ' MSE = ', mse))
g
}
manipulate(myHist(mu), mu = slider(62, 74, step = 0.5))
library(ggplot)
library(ggplot2)
library(manipulate)
myHist <- function(mu){
g <- ggplot2(galton, aes(x = child))
g <- g + geom_histogram(fill = "salmon",
binwidth=1, aes(y = ..density..), colour = "black")
g <- g + geom_density(size = 2)
g <- g + geom_vline(xintercept = mu, size = 2)
mse <- round(mean((galton$child - mu)^2), 3)
g <- g + labs(title = paste('mu = ', mu, ' MSE = ', mse))
g
}
manipulate(myHist(mu), mu = slider(62, 74, step = 0.5))
library(manipulate)
myHist <- function(mu){
g <- ggplot(galton, aes(x = child))
g <- g + geom_histogram(fill = "salmon",
binwidth=1, aes(y = ..density..), colour = "black")
g <- g + geom_density(size = 2)
g <- g + geom_vline(xintercept = mu, size = 2)
mse <- round(mean((galton$child - mu)^2), 3)
g <- g + labs(title = paste('mu = ', mu, ' MSE = ', mse))
g
}
manipulate(myHist(mu), mu = slider(62, 74, step = 0.5))
ggplot
ggplot()
librarz(manipulate)
library(manipulate)
library(manipulate)
myHist <- function(mu){
g <- ggplot(galton, aes(x = child))
g <- g + geom_histogram(fill = "salmon",
binwidth=1, aes(y = ..density..), colour = "black")
g <- g + geom_density(size = 2)
g <- g + geom_vline(xintercept = mu, size = 2)
mse <- round(mean((galton$child - mu)^2), 3)
g <- g + labs(title = paste('mu = ', mu, ' MSE = ', mse))
g
}
manipulate(myHist(mu), mu = slider(62, 74, step = 0.5))
library(galton)
library('galton')
library(UsingR); data(galton); library(ggplot2); library(reshape2)longGalton <- melt(galton, measure.vars = c("child", "parent"))g <- ggplot(longGalton, aes(x = value)) + geom_histogram(aes(y = ..density.., f\                                                             ill = variable), binwidth=1, color = "black") + geom_density(size = 2)g <- g + facet_grid(. ~ variable)g
install.packages("UsingR")
library(UsingR); data(galton); library(ggplot2); library(reshape2)longGalton <- melt(galton, measure.vars = c("child", "parent"))g <- ggplot(longGalton, aes(x = value)) + geom_histogram(aes(y = ..density.., f\                                                             ill = variable), binwidth=1, color = "black") + geom_density(size = 2)g <- g + facet_grid(. ~ variable)g
library(UsingR); data(galton); library(ggplot2); library(reshape2)longGalton <- melt(galton, measure.vars = c("child", "parent"))g <- ggplot(longGalton, aes(x = value)) + geom_histogram(aes(y = ..density.., fill = variable), binwidth=1, color = "black") + geom_density(size = 2)g <- g + facet_grid(. ~ variable)g
library(UsingR); data(galton); library(ggplot2); library(reshape2)longGalton <- melt(galton, measure.vars = c("child", "parent"))g <- ggplot(longGalton, aes(x = value)) + geom_histogram(aes(y = ..density.., fill = variable), binwidth=1, color = "black") + geom_density(size = 2)g <- g + facet_grid(. ~ variable)g
library(UsingR); data(galton); library(ggplot2); library(reshape2)longGalton <- melt(galton, measure.vars = c("child", "parent"))g <- ggplot(longGalton, aes(x = value)) + geom_histogram(aes(y = ..density.., fill = variable), binwidth=1, color = "black") + geom_density(size = 2)g <- g + facet_grid(. ~ variable)
library(UsingR); data(galton); library(ggplot2); library(reshape2)longGalton <- melt(galton, measure.vars = c("child", "parent"))g <- ggplot(longGalton, aes(x = value)) + geom_histogram(aes(y = ..density.., fill = variable), binwidth=1, color = "black") + geom_density(size = 2)
library(UsingR); data(galton); library(ggplot2); library(reshape2)longGalton <- melt(galton, measure.vars = c("child", "parent"))
library(UsingR); data(galton); library(ggplot2); library(reshape2)
library(UsingR); data(galton); library(ggplot2); library(reshape2)longGalton <- melt(galton, measure.vars = c("child", "parent"))
library(UsingR); data(galton); library(ggplot2); library(reshape2)longGalton <- melt(galton)
library(manipulate)myHist <- function(mu){    g <- ggplot(galton, aes(x = child))    g <- g + geom_histogram(fill = "salmon",                            binwidth=1, aes(y = ..density..), color = "black")    g <- g + geom_density(size = 2)    g <- g + geom_vline(xintercept = mu, size = 2)    mse <- round(mean((galton$child - mu)^2), 3)    g <- g + labs(title = paste('mu = ', mu, ' MSE = ', mse))    g}manipulate(myHist(mu), mu = slider(62, 74, step = 0.5))
p = seq(0 , 1, length = 1000)y = p * (1 - p)plot(p, y, type = "l", lwd = 3, frame = FALSE)
p = seq(0 , 1, length = 1000);y = p * (1 - p);plot(p, y, type = "l", lwd = 3, frame = FALSE)
p = seq(0 , 1, length = 1000)
p = seq(0 , 1, length = 1000);y = p * (1 - p);
y = p * (1 - p);
y = p * (1 - p);
plot(p, y, type = "l", lwd = 3, frame = FALSE)
library(UsingR)
data(father.son)
x<-father.son$height
n<-length(x)
x<-father.son$sheight
n<-length(x)
n
hist(x)
hist(x,bin=20)
hist(x,bins=20)
hist(x,breaks=20)
hist(x,breaks=20)
?binomial
?pbinomial
??binom
?binom
?pbinomial
?binomial
?bino
?binom
??binom
pbinom(5,5,0.5)
pbinom(5,6,0.5)
pbinom(5,6,0.5,lower.tail=FALSE)
pbinom(4,6,0.5,lower.tail=FALSE)
install.packages(c("boot", "class", "cluster", "codetools", "colorspace", "digest", "foreign", "httr", "jsonlite", "KernSmooth", "lattice", "manipulate", "MASS", "Matrix", "mgcv", "nlme", "nnet", "plyr", "Rcpp", "RCurl", "rmarkdown", "rpart", "spatial", "stringr", "survival", "swirl", "testthat"))
library('knitr')
library(swirl)
install.packages('swirl')
install.packages("swirl")
library(swirl)
swirl()
x
x[1:10]
x[is.na(x)]
x[!is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[x(3,5,7)]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect<-c(foo=11,bar=2,norf=NA)
vect
names(vect)
vect2<-c(11,2,NA)
names(vect2)<-c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
data
data()
setwd("coursera/datasci_course_materials/assignment5/")
data<-read.csv("seaflow_21min.csv")
head(data)
summary(data$pop)
summary(dat$pop)
dat<-read.csv("seaflow_21min.csv")
print summary(dat$pop)
print summary(dat$pop$synecho)
summary(dat$pop$synecho)
dat$pop
summary(dat$pop)
pop<-dat$pop
levels(pop)
summary(data$fsc_small)
```
getwd()
#setwd("~/coursera/datasci_course_materials/assignment5/")
